import test_utils.TestSet

func test_arithmatics() {
	ts = TestSet('Arithmatics')

	ts.assert_equal(1+3, 4)
	ts.assert_equal(1+3+8, 12)
	ts.assert_equal(1-3, -2)
	ts.assert_equal(1+3-4, 0)

	ts.assert_equal(4*9.5, 38)
	ts.assert_equal(1/4, 0)
	ts.assert_equal(9/2/3, 1)
	ts.assert_equal(1/.4, 0.25)
	ts.assert_equal(3*4/2, 6)

	ts.assert_equal(2+4*2, 10)
	ts.assert_equal(2*(4+1), 10)

	ts.assert_equal(10%4, 2)

	ts.assert_equal(2**3, 8)

	ts.print_summary()
}
test_arithmatics()


func test_assignment() {
	ts = TestSet('Assignment')
	a = 4
	a += 2
	ts.assert_equal(a, 6)
	a -= 3
	ts.assert_equal(a, 3)
	a *= 5
	ts.assert_equal(a, 15)
	a /= 6
	ts.assert_equal(a, 2)
	a /.= 0.2
	ts.assert_equal(a, 10)
	a %= 4
	ts.assert_equal(a, 2)
	a **= 4
	ts.assert_equal(a, 16)

	ts.print_summary()
}
test_assignment()


func test_logical() {
	ts = TestSet('Logical')
	ts.assert_true(2 == 2)
	ts.assert_false("123" == '12')
	ts.assert_false("123" == 123)
	ts.assert_true("123" == '123')
	ts.assert_true(true == true)
	ts.assert_false(2 != 2)
	ts.assert_true(2 != 9)

	ts.assert_true(2 < 9)
	ts.assert_true(2 > 1)
	ts.assert_true(2 >= 1)
	ts.assert_true(3 >= 3)
	ts.assert_false(2 >= 3)
	ts.assert_true(2 < 3)
	ts.assert_true(2 <= 2)
	ts.assert_true(4 <= 8)

	ts.assert_true(true && true)
	ts.assert_false(false && true)
	ts.assert_false(true && false)
	ts.assert_false(false && false)

	ts.assert_true(true || true)
	ts.assert_true(false || true)
	ts.assert_true(true || false)
	ts.assert_false(false || false)

	ts.print_summary()
}
test_logical()
